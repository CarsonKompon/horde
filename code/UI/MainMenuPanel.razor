@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Network;
@using System.Collections.Generic;
@using System.Threading.Tasks;
@inherits PanelComponent

<root>
	<div class="left">
		<img src="ui/logo.png" class="logo" />
		<p class="subtitle">A game by Carson Kompon</p>

		<div class="menu">
			<div class="header">
				<button class="@(UnsupportedMaps ? "" : "selected")" onclick=@(() => UnsupportedMaps = false)>Supported Maps</button>
				<button class="@(UnsupportedMaps ? "selected" : "")" onclick=@(() => UnsupportedMaps = true)>Unsupported Maps</button>
			</div>
			<div class="content">
				@if (UnsupportedMaps)
				{
					<PackageList ShowFilters="@true" Query="type:map sort:trending" OnSelected="@OnPackageSelected" Take=@(50)></PackageList>
					<div class="warning">These maps are not officially supported by the game and may not work correctly.</div>
				}
				else
				{
					<div class="supported-maps">
						<MapButton Map="eagleone/sd_bank" Difficulty="Easy" />
						<MapButton Map="eagleone/sd_lair" Difficulty="Medium" />
						<MapButton Map="eagleone/sd_club" Difficulty="Medium" />
						<MapButton Map="gvar/sd_lab" Difficulty="Hard" />
					</div>
				}
			</div>
		</div>
	</div>
	<div class="right">
		<div class="header">
			<div class="title">Server List</div>
		</div>

		<div class="content">

			@if (refreshing)
			{
				<div>Refreshing..</div>
			}
			else if (LobbyList.Count == 0)
			{
				<div>No lobbies were found</div>
			}
			else
			{
				@foreach (var lobby in LobbyList)
				{
					<div class="button" onclick=@(() => JoinLobby(lobby))>
						<div class="title">@lobby.Name</div>
						<div class="meta">
							<div class="map">@lobby.Map</div>
							<div class="count">@lobby.Members / @lobby.MaxMembers</div>
						</div>
					</div>
				}
			}
		</div>
	</div>
</root>

@code
{
	public static MainMenuPanel Instance { get; private set; }

	[Property] public SceneFile GameScene { get; set; }

	List<LobbyInformation> LobbyList = new();
	bool UnsupportedMaps = false;
	bool refreshing = false;

	protected override void OnStart()
	{
		base.OnStart();
		Instance = this;

		_ = RefreshLobbyList();
	}

	void OnPackageSelected(Package package)
	{
		LaunchArguments.Map = package.FullIdent;
		Scene.Load(GameScene);
	}

	async Task RefreshLobbyList()
	{
		while (true)
		{
			refreshing = true;
			StateHasChanged();

			LobbyList = await Networking.QueryLobbies();

			refreshing = false;
			StateHasChanged();

			await Task.DelayRealtimeSeconds(5.0f);
		}
	}

	void JoinLobby(LobbyInformation lobby)
	{
		Networking.Connect(lobby.LobbyId);
	}

	protected override int BuildHash() => System.HashCode.Combine(UnsupportedMaps);
}